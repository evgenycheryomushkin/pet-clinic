plugins {
    id 'java-conventions'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dm)
    id 'database-conventions'
}

dependencies {
    implementation project(':pet-clinic-api')
    implementation project(':pet-clinic-domain')

    compileOnly libs.lombok
    compileOnly libs.mapstruct
    annotationProcessor libs.lombok
    annotationProcessor libs.lombok.mapstruct.binding
    annotationProcessor libs.mapstruct.processor

    developmentOnly libs.spring.boot.devtools

    implementation libs.spring.boot.starter.web
    implementation libs.spring.boot.starter.actuator
    testImplementation libs.spring.boot.starter.test
}

jar {
    enabled = false
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=ERROR'
    ]
}

tasks.withType(JavaCompile) {
    doFirst {
        println "AnnotationProcessorPath for $name is ${options.getAnnotationProcessorPath().getFiles()}"
    }
}
